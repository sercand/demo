// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: feedprovider.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "feedprovider.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace feed {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* ProviderGetRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProviderGetRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_feedprovider_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_feedprovider_2eproto() {
  protobuf_AddDesc_feedprovider_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "feedprovider.proto");
  GOOGLE_CHECK(file != NULL);
  ProviderGetRequest_descriptor_ = file->message_type(0);
  static const int ProviderGetRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProviderGetRequest, request_),
  };
  ProviderGetRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProviderGetRequest_descriptor_,
      ProviderGetRequest::default_instance_,
      ProviderGetRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProviderGetRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProviderGetRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProviderGetRequest, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_feedprovider_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProviderGetRequest_descriptor_, &ProviderGetRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_feedprovider_2eproto() {
  delete ProviderGetRequest::default_instance_;
  delete ProviderGetRequest_reflection_;
}

void protobuf_AddDesc_feedprovider_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_feedprovider_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::feed::v1::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022feedprovider.proto\022\007feed.v1\032\014common.pr"
    "oto\">\n\022ProviderGetRequest\022(\n\007request\030\001 \001"
    "(\0132\027.feed.v1.FeedGetRequest2L\n\014FeedProvi"
    "der\022<\n\003Get\022\033.feed.v1.ProviderGetRequest\032"
    "\030.feed.v1.FeedGetResponseB\010Z\006feedpbb\006pro"
    "to3", 203);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "feedprovider.proto", &protobuf_RegisterTypes);
  ProviderGetRequest::default_instance_ = new ProviderGetRequest();
  ProviderGetRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_feedprovider_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_feedprovider_2eproto {
  StaticDescriptorInitializer_feedprovider_2eproto() {
    protobuf_AddDesc_feedprovider_2eproto();
  }
} static_descriptor_initializer_feedprovider_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProviderGetRequest::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProviderGetRequest::ProviderGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:feed.v1.ProviderGetRequest)
}

void ProviderGetRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  request_ = const_cast< ::feed::v1::FeedGetRequest*>(&::feed::v1::FeedGetRequest::default_instance());
}

ProviderGetRequest::ProviderGetRequest(const ProviderGetRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:feed.v1.ProviderGetRequest)
}

void ProviderGetRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  request_ = NULL;
}

ProviderGetRequest::~ProviderGetRequest() {
  // @@protoc_insertion_point(destructor:feed.v1.ProviderGetRequest)
  SharedDtor();
}

void ProviderGetRequest::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
  }
}

void ProviderGetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProviderGetRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProviderGetRequest_descriptor_;
}

const ProviderGetRequest& ProviderGetRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_feedprovider_2eproto();
  return *default_instance_;
}

ProviderGetRequest* ProviderGetRequest::default_instance_ = NULL;

ProviderGetRequest* ProviderGetRequest::New(::google::protobuf::Arena* arena) const {
  ProviderGetRequest* n = new ProviderGetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProviderGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:feed.v1.ProviderGetRequest)
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}

bool ProviderGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feed.v1.ProviderGetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .feed.v1.FeedGetRequest request = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feed.v1.ProviderGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feed.v1.ProviderGetRequest)
  return false;
#undef DO_
}

void ProviderGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feed.v1.ProviderGetRequest)
  // optional .feed.v1.FeedGetRequest request = 1;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->request_, output);
  }

  // @@protoc_insertion_point(serialize_end:feed.v1.ProviderGetRequest)
}

::google::protobuf::uint8* ProviderGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:feed.v1.ProviderGetRequest)
  // optional .feed.v1.FeedGetRequest request = 1;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->request_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:feed.v1.ProviderGetRequest)
  return target;
}

int ProviderGetRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:feed.v1.ProviderGetRequest)
  int total_size = 0;

  // optional .feed.v1.FeedGetRequest request = 1;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProviderGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feed.v1.ProviderGetRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProviderGetRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProviderGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feed.v1.ProviderGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feed.v1.ProviderGetRequest)
    MergeFrom(*source);
  }
}

void ProviderGetRequest::MergeFrom(const ProviderGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feed.v1.ProviderGetRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_request()) {
    mutable_request()->::feed::v1::FeedGetRequest::MergeFrom(from.request());
  }
}

void ProviderGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feed.v1.ProviderGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProviderGetRequest::CopyFrom(const ProviderGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feed.v1.ProviderGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProviderGetRequest::IsInitialized() const {

  return true;
}

void ProviderGetRequest::Swap(ProviderGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProviderGetRequest::InternalSwap(ProviderGetRequest* other) {
  std::swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProviderGetRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProviderGetRequest_descriptor_;
  metadata.reflection = ProviderGetRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProviderGetRequest

// optional .feed.v1.FeedGetRequest request = 1;
bool ProviderGetRequest::has_request() const {
  return !_is_default_instance_ && request_ != NULL;
}
void ProviderGetRequest::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
const ::feed::v1::FeedGetRequest& ProviderGetRequest::request() const {
  // @@protoc_insertion_point(field_get:feed.v1.ProviderGetRequest.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
::feed::v1::FeedGetRequest* ProviderGetRequest::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::feed::v1::FeedGetRequest;
  }
  // @@protoc_insertion_point(field_mutable:feed.v1.ProviderGetRequest.request)
  return request_;
}
::feed::v1::FeedGetRequest* ProviderGetRequest::release_request() {
  // @@protoc_insertion_point(field_release:feed.v1.ProviderGetRequest.request)
  
  ::feed::v1::FeedGetRequest* temp = request_;
  request_ = NULL;
  return temp;
}
void ProviderGetRequest::set_allocated_request(::feed::v1::FeedGetRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:feed.v1.ProviderGetRequest.request)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace feed

// @@protoc_insertion_point(global_scope)
